{{- $image := printf "%s/%s:%s" $.Values.global.repository $.Values.global.images.cases.application.image $.Values.global.images.cases.application.tag -}}
apiVersion: v1
kind: Pod
metadata:
  name: isc-cases-application-test-ready
  labels:
    app.kubernetes.io/name: isc-cases-application-test
    helm.sh/chart: {{ $.Chart.Name }}
    release: {{ $.Release.Name }}
    app.kubernetes.io/instance: {{ $.Release.Name }}
    app.kubernetes.io/managed-by: {{ $.Release.Service }}
  annotations:
    "helm.sh/hook": test-success
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  serviceAccountName: {{ template "ibm-isc-cases-operator-prod.name" . }}
  imagePullSecrets:
    - name: {{- include "ibm-isc-cases.imagePullSecret" (dict "val" .Values) | indent 1 }}
  containers:
    - name: isc-cases-application-test
      {{- include "ibm-isc-cases.podcfg" (dict "val" .Values "app" "application") | indent 2 }}
      command: ["sh", "-c", "port=9443; curl -ki https://isc-cases-application:$port"]
      resources:
        limits:
          memory: 100Mi
          cpu:  200m
        requests:
          memory: 100Mi
          cpu: 200m
      securityContext:
        privileged: false
        readOnlyRootFilesystem: false
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
  hostIPC: false
  hostNetwork: false
  hostPID: false
  securityContext:
    runAsNonRoot: true
    runAsUser: {{ .Values.runAsUser }}
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                  - amd64
  restartPolicy: Never
