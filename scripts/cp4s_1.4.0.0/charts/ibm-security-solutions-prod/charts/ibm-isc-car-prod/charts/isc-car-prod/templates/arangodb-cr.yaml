{{- $imageRepo := (include "platform.repository" .) }}
{{- $configRoot := $.Values.global.arangodb -}}
{{- $arangodbImageRoot := $.Values.global.images.arangodb.arangodb -}}
{{- $imageArangdb := printf "%s/%s:%s" $imageRepo $arangodbImageRoot.image $arangodbImageRoot.tag -}}
{{- $exporterImageRoot := $.Values.global.images.arangodb.exporter -}}
{{- $imageExporter := printf "%s/%s:%s" $imageRepo  $exporterImageRoot.image $exporterImageRoot.tag -}}



apiVersion: "database.arangodb.com/v1"
kind: "ArangoDeployment"
metadata:
  name: {{ $configRoot.deploymentName | default "arangodb" }}
  labels:
    deployment-name: {{ $configRoot.deploymentName | default "arangodb" }}
    chart: {{.Chart.Name}}-{{.Chart.Version}}
    helm.sh/chart: {{ .Chart.Name}}-{{ .Chart.Version | replace "+" "_" }}
    app.kubernetes.io/name: {{.Chart.Name}}-{{.Chart.Version}}
    release: "{{ .Release.Name }}"
    app.kubernetes.io/instance: "{{ .Release.Name }}"
    app.kubernetes.io/managed-by: "{{ .Release.Service }}"
spec:
  {{- include "arangodb.annotations" . }}
    productVersion: {{ $configRoot.version | quote }}
  labels:
    app.kubernetes.io/name: {{.Chart.Name}}-{{.Chart.Version}}
    app.kubernetes.io/instance: "{{ .Release.Name }}"
    app.kubernetes.io/managed-by: "{{ .Release.Service }}"
  imagePullSecrets:
    - ibm-isc-pull-secret
  bootstrap:
    passwordSecretNames:
      root: Auto
  disableIPv6: true
  mode: ActiveFailover
  image: {{ $imageArangdb }}
  imagePullPolicy: {{ $.Values.global.imagePullPolicy | default "IfNotPresent" | quote }}
  imageDiscoveryMode: direct
  lifecycle:
    resources:
      limits:
        {{- range $key, $val := $configRoot.lifecycle.resources.limits }}
        {{ $key }}: {{ $val | quote }}
        {{- end}}
      requests:
        {{- range $key, $val := $configRoot.lifecycle.resources.requests }}
        {{ $key }}: {{ $val | quote }}
        {{- end}}
  metrics:
  {{- if (eq $configRoot.metrics.enabled true) }}
    enabled: true
    image: {{ $imageExporter }}
    imagePullPolicy: {{ $.Values.global.imagePullPolicy | default "IfNotPresent" | quote }}
    resources:
      limits:
        {{- range $key, $val := $configRoot.metrics.resources.limits }}
        {{ $key }}: {{ $val | quote }}
        {{- end}}
      requests:
        {{- range $key, $val := $configRoot.metrics.resources.requests }}
        {{ $key }}: {{ $val | quote }}
        {{- end}}
  {{- else }}
    enabled: false
  {{- end }}
  environment: {{ $configRoot.environment | default "Production" }}
  externalAccess:
    type: None
  agents:
    securityContext:
      allowPrivilegeEscalation: false
      privileged: false
      readOnlyRootFilesystem: false
      runAsNonRoot: true
      runAsUser: 1001
      supplementalGroups:
        - 1001
      fsGroup: 1001
    probes:
      livenessProbeDisabled: {{ $configRoot.agentConfiguration.probes.livenessProbeDisabled }}
      readinessProbeDisabled: {{ $configRoot.agentConfiguration.probes.readinessProbeDisabled }}
      {{- if and (eq $configRoot.agentConfiguration.probes.livenessProbeDisabled false) ($configRoot.agentConfiguration.probes.livenessProbeSpec) }}
      livenessProbeSpec:
        {{- range $key, $val := $configRoot.agentConfiguration.probes.livenessProbeSpec }}
        {{ $key }}: {{ $val }}
        {{- end}}
      {{- end }}
      {{- if and (eq $configRoot.agentConfiguration.probes.readinessProbeDisabled false) ($configRoot.agentConfiguration.probes.readinessProbeSpec) }}
      readinessProbeSpec:
        {{- range $key, $val := $configRoot.agentConfiguration.probes.readinessProbeSpec }}
        {{ $key }}: {{ $val }}
        {{- end}}
      {{- end }}
    serviceAccountName: arango-isc-service-account-default
    count: {{ $configRoot.agentConfiguration.count | default 3 }}
    storageClassName: {{ $.Values.global.storageClass | default "nfs-client" | quote }}
    args:
      {{- range $configRoot.agentConfiguration.args }}
      - {{ . | quote }}
      {{- end }}
    resources:
      requests:
        {{- range $key, $val := $configRoot.agentConfiguration.resources.requests }}
        {{ $key }}: {{ $val | quote }}
        {{- end}}
      limits:
        {{- range $key, $val := $configRoot.agentConfiguration.resources.limits }}
        {{ $key }}: {{ $val | quote }}
        {{- end}}
  single:
    securityContext:
      allowPrivilegeEscalation: false
      privileged: false
      readOnlyRootFilesystem: false
      runAsNonRoot: true
      runAsUser: 1001
      supplementalGroups:
        - 1001
      fsGroup: 1001
    probes:
      livenessProbeDisabled: {{ $configRoot.singleConfiguration.probes.livenessProbeDisabled }}
      readinessProbeDisabled: {{ $configRoot.singleConfiguration.probes.readinessProbeDisabled }}
      {{- if and (eq $configRoot.singleConfiguration.probes.livenessProbeDisabled false) ($configRoot.singleConfiguration.probes.livenessProbeSpec) }}
      livenessProbeSpec:
        {{- range $key, $val := $configRoot.singleConfiguration.probes.livenessProbeSpec }}
        {{ $key }}: {{ $val }}
        {{- end}}
      {{- end }}
      {{- if and (eq $configRoot.singleConfiguration.probes.readinessProbeDisabled false) ($configRoot.singleConfiguration.probes.readinessProbeSpec) }}
      readinessProbeSpec:
        {{- range $key, $val := $configRoot.singleConfiguration.probes.readinessProbeSpec }}
        {{ $key }}: {{ $val }}
        {{- end}}
      {{- end }}
    serviceAccountName: arango-isc-service-account-default
    storageClassName: {{  $.Values.global.storageClass | default "nfs-client" | quote  }}
    count: {{ $configRoot.singleConfiguration.count | default 2 }}
    args:
      {{- range $configRoot.singleConfiguration.args }}
      - {{ . | quote }}
      {{- end }}
    resources:
      requests:
        {{- range $key, $val := $configRoot.singleConfiguration.resources.requests }}
        {{ $key }}: {{ $val | quote }}
        {{- end}}
      limits:
        {{- range $key, $val := $configRoot.singleConfiguration.resources.limits }}
        {{ $key }}: {{ $val | quote }}
        {{- end}}
